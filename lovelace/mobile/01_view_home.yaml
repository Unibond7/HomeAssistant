button-state: &button-state
  - value: 'on'
    styles:
      card:
        - box-shadow: |
            [[[ return states['input_boolean.daylight'].state == 'off'
              ? 'inset -4px -4px 5px rgba(60, 60, 60, .6), inset 4px 4px 5px rgba(0, 0, 0, .5)'
              : 'inset -3px -3px 5px rgba(255, 255, 255), inset 3px 3px 5px rgba(0, 0, 0, .08)';
            ]]]
      icon:
        - color: var(--paper-item-icon-active-color)

button-style: &button-style
  card:
    - height: 80px
    - width: 80px
    - border-radius: 15px
    - box-shadow: |
        [[[ return states['input_boolean.daylight'].state == 'off'
          ? '-5px -5px 10px rgba(50, 50, 50, .2), 6px 6px 10px rgba(0, 0, 0, .08)'
          : '-5px -5px 8px rgba(255, 255, 255, .5), 5px 5px 8px rgba(0, 0, 0, .03)';
        ]]]
    - background-color: var(--primary-background-color)
  name:
    - font-size: 12px
    - font-weight: bold
  icon:
    - color: var(--primary-text-color)

button-override-style: &button-override-style
  card:
    - height: 60px
    - width: 60px
    - margin-top: 10px
    - border-radius: 15px
    - box-shadow: |
        [[[ return states['input_boolean.daylight'].state == 'off'
          ? '-5px -5px 10px rgba(50, 50, 50, .2), 6px 6px 10px rgba(0, 0, 0, .08)'
          : '-5px -5px 8px rgba(255, 255, 255, .5), 5px 5px 8px rgba(0, 0, 0, .03)';
        ]]]
    - background-color: var(--primary-background-color)
  icon:
    - color: var(--primary-text-color)

button-word-state: &button-word-state
  - value: 'on'
    styles:
      card:
        - box-shadow: |
            [[[ return states['input_boolean.daylight'].state == 'off'
              ? 'inset -4px -4px 5px rgba(60, 60, 60, .6), inset 4px 4px 5px rgba(0, 0, 0, .5)'
              : 'inset -3px -3px 5px rgba(255, 255, 255), inset 3px 3px 5px rgba(0, 0, 0, .08)';
            ]]]
      name:
        - color: var(--paper-item-icon-active-color)

button-word-style: &button-word-style
  card:
    - height: 80px
    - width: 80px
    - border-radius: 15px
    - box-shadow: |
        [[[ return states['input_boolean.daylight'].state == 'off'
          ? '-5px -5px 10px rgba(50, 50, 50, .2), 6px 6px 10px rgba(0, 0, 0, .08)'
          : '-5px -5px 8px rgba(255, 255, 255, .5), 5px 5px 8px rgba(0, 0, 0, .03)';
        ]]]
    - background-color: var(--primary-background-color)
  name:
    - font-size: 20px
    - font-weight: bold

markdown-style: &markdown-style
  .: |
    ha-card {
      --ha-card-background: none !important;
      box-shadow: none !important;
    }
  ha-markdown:
    $: |
      ha-markdown-element {
        letter-spacing: 0;

      }
      ha-markdown-element pre {
        padding: 0px;
      }
      h1 {
        font-size: 15px !important;
        font-family: Helvetica;
        margin-bottom: 10px;
        opacity: 1;
        padding-left: 0px
      }

title: Home
icon: mdi:home
path: home
badges:
  - person.ruby
  - person.tim
cards:
  - type: horizontal-stack
    cards:
      - type: vertical-stack
        cards:
          - type: markdown
            content: |
              # Lights
            style:
              .: |
                ha-card {
                  --ha-card-background: none !important;
                  box-shadow: none !important;
                }
              ha-markdown:
                $: |
                  h1 {
                    font-size: 20px;
                    font-weight: bold;
                    font-family: Helvetica;
                    letter-spacing: '-0.01em';
                  }
          - type: horizontal-stack
            cards:
              - type: 'custom:button-card'
                entity: group.dining_room # Change this to the entity you want to control
                icon: 'mdi:vanity-light' # Change this to the icon you want to display
                name: Dining
                show_icon: true
                show_name: true
                state: *button-state
                styles: *button-style
                tap_action:
                  action: toggle
                  haptic: light
                hold_action:
                  action: more-info
                  haptic: medium
              - type: 'custom:button-card'
                entity: input_boolean.dining_light_override # Change this to the entity you want to control
                icon: 'mdi:pause-octagon-outline' # Change this to the icon you want to display
                show_icon: true
                show_name: false
                state: *button-state
                styles: *button-override-style
                tap_action:
                  action: toggle
                  haptic: light
          - type: horizontal-stack
            cards:
              - type: 'custom:button-card'
                entity: light.bedroom # Change this to the entity you want to control
                icon: 'mdi:floor-lamp' # Change this to the icon you want to display
                name: Bedroom
                show_icon: true
                show_name: true
                state: *button-state
                styles: *button-style
                tap_action:
                  action: toggle
                  haptic: light
                hold_action:
                  action: more-info
                  haptic: medium
              - type: 'custom:button-card'
                entity: input_boolean.bedroom_light_override # Change this to the entity you want to control
                icon: 'mdi:pause-octagon-outline' # Change this to the icon you want to display
                show_icon: true
                show_name: false
                state: *button-state
                styles: *button-override-style
                tap_action:
                  action: toggle
                  haptic: light
          - type: horizontal-stack
            cards:
              - type: 'custom:button-card'
                entity: light.hallway # Change this to the entity you want to control
                icon: 'mdi:ceiling-light' # Change this to the icon you want to display
                name: Hallway
                show_icon: true
                show_name: true
                state: *button-state
                styles: *button-style
                tap_action:
                  action: toggle
                  haptic: light
                hold_action:
                  action: more-info
                  haptic: medium
              - type: 'custom:button-card'
                entity: input_boolean.hall_light_override # Change this to the entity you want to control
                icon: 'mdi:pause-octagon-outline' # Change this to the icon you want to display
                show_icon: true
                show_name: false
                state: *button-state
                styles: *button-override-style
                tap_action:
                  action: toggle
                  haptic: light
          - type: horizontal-stack
            cards:
              - type: 'custom:button-card'
                entity: light.kitchen # Change this to the entity you want to control
                icon: 'mdi:ceiling-light' # Change this to the icon you want to display
                name: Kitchen
                show_icon: true
                show_name: true
                state: *button-state
                styles: *button-style
                tap_action:
                  action: toggle
                  haptic: light
                hold_action:
                  action: more-info
                  haptic: medium
              - type: 'custom:button-card'
                entity: input_boolean.kitchen_light_override # Change this to the entity you want to control
                icon: 'mdi:pause-octagon-outline' # Change this to the icon you want to display
                show_icon: true
                show_name: false
                state: *button-state
                styles: *button-override-style
                tap_action:
                  action: toggle
                  haptic: light
          - type: horizontal-stack
            cards:
              - type: 'custom:button-card'
                entity: light.lamp # Change this to the entity you want to control
                icon: 'mdi:floor-lamp-variant' # Change this to the icon you want to display
                name: Living
                show_icon: true
                show_name: true
                state: *button-state
                styles: *button-style
                tap_action:
                  action: toggle
                  haptic: light
                hold_action:
                  action: more-info
                  haptic: medium
              - type: 'custom:button-card'
                entity: input_boolean.living_light_override # Change this to the entity you want to control
                icon: 'mdi:pause-octagon-outline' # Change this to the icon you want to display
                show_icon: true
                show_name: false
                state: *button-state
                styles: *button-override-style
                tap_action:
                  action: toggle
                  haptic: light
          - type: horizontal-stack
            cards:
              - type: 'custom:button-card'
                entity: light.entrance # Change this to the entity you want to control
                icon: 'mdi:outdoor-lamp' # Change this to the icon you want to display
                name: Entrance
                show_icon: true
                show_name: true
                state: *button-state
                styles: *button-style
                tap_action:
                  action: toggle
                  haptic: light
                hold_action:
                  action: more-info
                  haptic: medium
              - type: 'custom:button-card'
                entity: input_boolean.entrance_light_override # Change this to the entity you want to control
                icon: 'mdi:pause-octagon-outline' # Change this to the icon you want to display
                show_icon: true
                show_name: false
                state: *button-state
                styles: *button-override-style
                tap_action:
                  action: toggle
                  haptic: light
      - type: vertical-stack
        cards:
          - type: markdown
            content: |
              # Presence
            style:
              .: |
                ha-card {
                  --ha-card-background: none !important;
                  box-shadow: none !important;
                }
              ha-markdown:
                $: |
                  h1 {
                    font-size: 20px;
                    font-weight: bold;
                    font-family: Helvetica;
                    letter-spacing: '-0.01em';
                  }
          - type: grid
            columns: 2
            cards:
              - type: horizontal-stack
                cards:
                  - type: 'custom:button-card'
                    entity: input_boolean.override_presence # Change this to the entity you want to control
                    icon: |
                      [[[ return states['input_boolean.override_presence'].state == 'off'
                        ? 'mdi:home-lock-open' : 'mdi:home-lock' ]]]
                    name: Override
                    show_icon: true
                    show_name: true
                    state: *button-state
                    styles: *button-style
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: medium
              - type: horizontal-stack
                cards:
                  - type: 'custom:button-card'
                    entity: input_boolean.no_one_home # Change this to the entity you want to control
                    show_icon: true
                    show_name: true
                    icon: |
                      [[[ return states['input_boolean.no_one_home'].state == 'off'
                        ? 'mdi:home-import-outline' : 'mdi:home-export-outline' ]]]
                    name: >
                      [[[ 
                        if (( states['person.ruby'].state == 'home') && ( states['person.tim'].state == 'home'))
                          return 'Both Home';
                        else if (( states['person.ruby'].state == 'home') && ( states['person.tim'].state != 'home'))
                          return 'Ruby is Home';
                        else if (( states['person.ruby'].state != 'home') && ( states['person.tim'].state == 'home'))
                          return 'Tim is Home';
                        else if (( states['person.ruby'].state != 'home') && ( states['person.tim'].state != 'home'))
                          return 'No One Home';
                      ]]]
                    state: *button-state
                    styles: *button-style
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: medium
              - type: horizontal-stack
                cards:
                  - type: 'custom:button-card'
                    entity: input_boolean.guests # Change this to the entity you want to control
                    show_icon: true
                    show_name: true
                    icon: |
                      [[[ return states['input_boolean.guests'].state == 'off'
                        ? 'mdi:account-multiple-minus-outline' : 'mdi:account-multiple-plus-outline' ]]]
                    name: |
                      [[[ return states['input_boolean.guests'].state == 'off'
                        ? 'No Guests' : 'Guests' ]]]
                    state: *button-state
                    styles: *button-style
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: medium
              - type: horizontal-stack
                cards:
                  - type: 'custom:button-card'
                    entity: input_boolean.asleep # Change this to the entity you want to control
                    show_icon: true
                    show_name: true
                    icon: |
                      [[[ return states['input_boolean.asleep'].state == 'off'
                        ? 'mdi:sleep-off' : 'mdi:sleep' ]]]
                    name: |
                      [[[ return states['input_boolean.asleep'].state == 'off'
                        ? 'Awake' : 'Asleep' ]]]
                    state: *button-state
                    styles: *button-style
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: medium
              - type: horizontal-stack
                cards:
                  - type: 'custom:button-card'
                    entity: input_boolean.meter_notification_sent # Change this to the entity you want to control
                    show_icon: true
                    show_name: true
                    icon: |
                      [[[ return states['input_boolean.meter_notification_sent'].state == 'off'
                        ? 'mdi:comment-off-outline' : 'mdi:message-arrow-right-outline' ]]]
                    name: |
                      [[[ return states['input_boolean.meter_notification_sent'].state == 'off'
                        ? 'Msg Not Sent' : 'Msg Sent' ]]]
                    state: *button-state
                    styles: *button-style
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: medium
              - type: horizontal-stack
                cards:
                  - type: 'custom:button-card'
                    entity: input_boolean.cleaner # Change this to the entity you want to control
                    name: |
                      [[[ return states['input_boolean.cleaner'].state == 'off'
                        ? 'No Cleaner' : 'Cleaner' ]]]
                    show_icon: true
                    show_name: true
                    state: *button-state
                    styles: *button-style
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: medium
              - type: horizontal-stack
                cards:
                  - type: 'custom:button-card'
                    entity: input_boolean.disable_alarm # Change this to the entity you want to control
                    show_icon: true
                    show_name: false
                    icon: |
                      [[[ return states['input_boolean.disable_alarm'].state == 'off'
                        ? 'mdi:alarm-bell' : 'mdi:alarm-off' ]]]
                    state: *button-state
                    styles: *button-style
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: medium
  - type: horizontal-stack
    cards:
      - type: vertical-stack
        cards:
          - type: markdown
            content: |
              # Disable Alarms
            style:
              .: |
                ha-card {
                  --ha-card-background: none !important;
                  box-shadow: none !important;
                }
              ha-markdown:
                $: |
                  h1 {
                    font-size: 20px;
                    font-weight: bold;
                    font-family: Helvetica;
                    letter-spacing: '-0.01em';
                  }
          - type: grid
            columns: 2
            cards:
              - type: horizontal-stack
                cards:
                  - type: 'custom:button-card'
                    entity: input_boolean.disable_alarm # Change this to the entity you want to control
                    icon: |
                      [[[ return states['input_boolean.disable_alarm'].state == 'off'
                        ? 'mdi:shield-outline' : 'mdi:shield-off-outline' ]]]
                    name: All Alarms
                    show_icon: true
                    show_name: true
                    state: *button-state
                    styles: *button-style
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: medium
              - type: horizontal-stack
                cards:
                  - type: 'custom:button-card'
                    entity: input_boolean.disable_alarm_lights # Change this to the entity you want to control
                    icon: |
                      [[[ return states['input_boolean.disable_alarm_lights'].state == 'off'
                        ? 'mdi:lightbulb-group-outline' : 'mdi:lightbulb-group-off-outline' ]]]
                    name: Lights
                    show_icon: true
                    show_name: true
                    state: *button-state
                    styles: *button-style
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: medium
              - type: horizontal-stack
                cards:
                  - type: 'custom:button-card'
                    entity: input_boolean.disable_alarm_lights # Change this to the entity you want to control
                    icon: |
                      [[[ return states['input_boolean.disable_alarm_lights'].state == 'off'
                        ? 'mdi:lightbulb-group-outline' : 'mdi:lightbulb-group-off-outline' ]]]
                    name: Lights
                    show_icon: true
                    show_name: true
                    state: *button-state
                    styles: *button-style
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: medium
              - type: horizontal-stack
                cards:
                  - type: 'custom:button-card'
                    entity: input_boolean.disable_alarm_voice # Change this to the entity you want to control
                    icon: |
                      [[[ return states['input_boolean.disable_alarm_voice'].state == 'off'
                        ? 'mdi:account-voice' : 'mdi:voice-off' ]]]
                    name: Voice
                    show_icon: true
                    show_name: true
                    state: *button-state
                    styles: *button-style
                    tap_action:
                      action: toggle
                      haptic: light
                    hold_action:
                      action: more-info
                      haptic: medium
              # - type: horizontal-stack
              #   cards:
              #     - type: 'custom:button-card'
              #       entity: input_boolean.disable_alarm_notification # Change this to the entity you want to control
              #       icon: |
              #         [[[ return states['input_boolean.disable_alarm_notification'].state == 'off'
              #           ? 'mdi:message-outline' : 'mdi:message-off-outline ]]]
              #       name: Notification
              #       show_icon: true
              #       show_name: true
              #       state: *button-state
              #       styles: *button-style
              #       tap_action:
              #         action: toggle
              #         haptic: light
              #       hold_action:
              #         action: more-info
              #         haptic: medium
              # - type: horizontal-stack
              #   cards:
              #     - type: 'custom:button-card'
              #       entity: input_boolean.disable_alarm_camera # Change this to the entity you want to control
              #       icon: |
              #         [[[ return states['input_boolean.disable_alarm_camera'].state == 'off'
              #           ? 'mdi:video-outline' : 'mdi:video-off-outline' ]]]
              #       name: Camera
              #       show_icon: true
              #       show_name: true
              #       state: *button-state
              #       styles: *button-style
              #       tap_action:
              #         action: toggle
              #         haptic: light
              #       hold_action:
              #         action: more-info
              #         haptic: medium

      - type: vertical-stack
        cards:
          - type: markdown
            content: |
              # Wake Up Lights
            style:
              .: |
                ha-card {
                  --ha-card-background: none !important;
                  box-shadow: none !important;
                }
              ha-markdown:
                $: |
                  h1 {
                    font-size: 20px;
                    font-weight: bold;
                    font-family: Helvetica;
                    letter-spacing: '-0.01em';
                  }
          - type: horizontal-stack
            cards:
              - type: 'custom:button-card'
                entity: input_boolean.wakeup_enabled # Change this to the entity you want to control
                name: '[[[ return states["input_boolean.wakeup_enabled"].state  == "off" ? "OFF" : "ON";]]]'
                show_icon: false
                show_name: true
                state: *button-word-state
                styles: *button-word-style
                tap_action:
                  action: toggle
                  haptic: light
                hold_action:
                  action: more-info
                  haptic: medium
              - type: 'custom:button-card'
                entity: input_boolean.wakeup_weekend # Change this to the entity you want to control
                name: Weekend
                show_icon: true
                show_name: true
                state: *button-state
                styles: *button-style
                tap_action:
                  action: toggle
                  haptic: light
                hold_action:
                  action: more-info
                  haptic: medium
          - type: 'custom:time-picker-card'
            entity: input_datetime.wakeup_time # Change this to the entity you want to control
            hide:
              name: true
            style: |
                ha-card {
                  height: 140px;
                  width: 168px;
                  background-color: var(--primary-background-color);
                  border-radius: 15px;
                  box-shadow:
                    {% if is_state('input_boolean.daylight', 'off') %}
                      -5px -5px 10px rgba(50, 50, 50, .2), 6px 6px 10px rgba(0, 0, 0, .08)
                    {% elif is_state('input_boolean.daylight', 'on') %}
                      -5px -5px 8px rgba(255, 255, 255, .5), 5px 5px 8px rgba(0, 0, 0, .03);
                    {% endif %}
                }
          - type: 'custom:numberbox-card'
            entity: input_number.wakeup_transition # Change this to the entity you want to control
            name: false
            icon: false
  
  - type: vertical-stack
    cards:
      - type: entities
        style: |
          ha-card {
            font-family: Helvetica;
            background-color: var(--primary-background-color);
            border-radius: 15px;
            box-shadow:
              {% if is_state('input_boolean.daylight', 'off') %}
                -5px -5px 10px rgba(50, 50, 50, .2), 6px 6px 10px rgba(0, 0, 0, .08)
              {% elif is_state('input_boolean.daylight', 'on') %}
                -5px -5px 8px rgba(255, 255, 255, .5), 5px 5px 8px rgba(0, 0, 0, .03);
              {% endif %}
          }
        entities:
          - type: 'custom:text-input-row'
            entity: input_text.create_fwd_email
          - type: "custom:paper-buttons-row"
            buttons:
              - entity: sensor.curl_resp
                name: 'Create Forwarding Mail'
                tap_action:
                  action: call-service
                  service: script.create_fwd_email
                state_icons:
                  "200": "mdi:email-send-outline"
                  "201": "mdi:email-check-outline"
                  "400": "mdi:alert-circle-outline"
                  "401": "mdi:alert-circle-outline"
                  "403": "mdi:alert-circle-outline"